<?xml version="1.0"?>
<launch>
       <!-- ROS CONTROL AND HARDWARE INTERFACE -->


	<!-- Arguments to set the MIA COM number  -->
	<arg name="Mia_COM_" default='0' doc="Int number of the Mia hand COM port" />
	<arg name="Mia_fs_" default='20' doc="Hz, frequency of the control loop of the Mia Hw interface" />
	<arg name="robotNamespace"         default="mia_hand_hw"/> <!-- /mia_hand -->
	<arg name="load_default_mia_model" default="false" />

	<group ns="$(arg robotNamespace)">

		<!-- Load the path of the config file of the MIA trasnsmission -->
		<param name="mia_transmissions_config_" type="string" value="$(find mia_hand_description)/calibration/transmission_config.yaml " />

	  	 <!-- Argument to select the type traj controller -->
		<arg name="tc_type" default="vel"  doc="type of trajectory controller to launch. Values: vel, pos "/>

		<!-- Load urd as robot description -->
		<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find mia_hand_description)/urdf/mia_hand_launch.urdf.xacro'
			default_mia_model:=$(arg load_default_mia_model)" />

		<!-- convert real joint states to to joint state to be plot in RViz or vizualization tools -->
		<node name="remap_mia_joint_states" pkg="mia_hand_description" type="remap_mia_joint_states" />


		<!-- convert joint states to TF transforms for rviz, etc -->
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false">
		  <remap from="joint_states" to="miaviz_joint_states" />
	  	</node>

		<!-- Load joint controller configurations from YAML file to parameter server -->
		<rosparam file="$(find mia_hand_ros_control)/config/mia_hand_hw_controllers.yaml" command="load"/>
		<rosparam file="$(find mia_hand_ros_control)/config/mia_hand_hw_trajectory_singleChain_controllers.yaml" command="load"/>

		<!-- Start the control node -->
		<node name="Mia_hw_node" pkg="mia_hand_ros_control" type="Mia_hw_node" output="screen">
			<param name="Mia_COM_" type="int" value="$(arg Mia_COM_)"/> <!-- private param so as to match to the namespace used-->
			<param name="Mia_fs_" type="int" value="$(arg Mia_fs_)"/> <!-- private param so as to match to the namespace used-->
		</node>

		<!-- spawn controller -->
		<node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false"
			output="screen"  args="spawn joint_state_controller
								mia_hand_index_$(arg tc_type)_trajectory_controller
								mia_hand_mrl_$(arg tc_type)_trajectory_controller
								mia_hand_thumb_$(arg tc_type)_trajectory_controller" />


		 <!-- MOVEIT -->


		 <!-- Load URDF and param files on server-->
		 <include file="$(find mia_hand_moveit_config)/launch/planning_context.launch">
		 <arg name="load_robot_description" value="true" />
		 </include>

		 <!-- Remap action used by Moveit as the one generated by ROS control controllers-->
		 <!--remap from="/joint_trajectory_action" to="/mia_hand_index_$(arg tc_type)_trajectory_controller/follow_joint_trajectory"/-->

		 <!-- Run the main MoveIt executable without trajectory execution-->
		 <include file="$(find mia_hand_moveit_config)/launch/move_group.launch">
		 <arg name="allow_trajectory_execution" value="true" />
		 <arg name="fake_execution" value="false" />
		 <arg name="info" value="true" />
		 <arg name="controller_type" value="$(arg tc_type)" />


		 </include>

		 <!--<param name="move_group/trajectory_execution/allowed_execution_duration_scaling" value="6.0" />
		 <param name="move_group/trajectory_execution/execution_duration_monitoring" value="false" /> -->


		 <!-- RVIZ -->
		 <node name="rviz" pkg="rviz" type="rviz" args="-d $(find mia_hand_ros_control)/config/rviz_moveit_config.rviz"/>

	</group>
</launch>
